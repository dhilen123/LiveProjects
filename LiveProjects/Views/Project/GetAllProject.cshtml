@using PagedList;@using PagedList.Mvc;@model LiveProjects.Models.Pagination.ProjectPagination@{    ViewBag.Title = "GetAllProject";}<style>    .pagination {        margin-top: 20px;        display: flex;        justify-content: center;    }        .pagination a,        .pagination span {            color: #007bff;            background-color: #fff;            border: 1px solid #007bff;            padding: 8px 16px;            text-decoration: none;            cursor: pointer;            margin: 0 4px;            border-radius: 4px;        }            .pagination .active a,            .pagination a:hover {                background-color: #007bff;                color: #fff;                border: 1px solid #007bff;            }        .pagination .disabled a,        .pagination .disabled span {            color: #ddd;            pointer-events: none;            background-color: #fff;            border: 1px solid #ddd;        }</style><div class="card mb-4 mt-4">    <div class="card-header">        <i class="bi bi-card-checklist me-1"></i>        <span class="fs-5">Project</span>        <a href="../Project/ProjectAdd" class="btn btn-outline-success float-end"> <i class="fa fa-plus"></i>Add New</a>    </div>    <div class="card-body table-responsive">        <table class="table table-bordered text-center" id="datatablesSimple">            <thead>                <tr>                    <th>Project Name</th>                    <th>Project Manager</th>                    <th>Technology</th>                    <th>Start Date</th>                    <th>End Date</th>                    <th>Status</th>                    <th>Actions</th>                </tr>            </thead>            <tbody>                @{ int i = 1;}                @foreach (var item in Model.List)                {    <tr>        @{ i++;}        <td>@item.projName</td>        <td>@item.Resource.resName</td>        <td>@item.Technology1.techName</td>        <td>@item.startdate</td>        <td>@item.enddate</td>        <td>@item.status</td>        <td>            <input type="button" value="Edit" class="btn  btn-outline-primary" onclick="location.href='@Url.Action("ProjectEdit", "Project", new { projectId = item.projId })'" />            <a href="#" onclick="Delete(@item.projId)" class="btn btn-outline-danger ms-1">Delete</a>        </td>    </tr>}            </tbody>        </table>    </div></div>@if (@Model.Pager.EndPage > 1){    <ul class="pagination">               @if (@Model.Pager.CurrentPage > 1)        {            <li>                <a href="~/Project/GetAllProject">First</a>            </li>            <li>                <a href="~/Project/GetAllProject?page=@(Model.Pager.CurrentPage - 1)">Previous</a>            </li>        }        @for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)        {            <li class="@(page == Model.Pager.CurrentPage ? "active" : "")">                <a href="~/Project/GetAllProject?page=@page">@page</a>            </li>        }               @if (Model.Pager.CurrentPage < Model.Pager.TotalPages)        {            <li>                <a href="~/Project/GetAllProject?page=@(Model.Pager.CurrentPage + 1)">Next</a>            </li>            <li>                <a href="~/Project/GetAllProject?page=@(Model.Pager.TotalPages)">Last</a>            </li>        }    </ul>}@section Scripts{    <script type="text/javascript">        function Delete(ID) {            Swal.fire({                title: 'Are you sure want to delete?',                icon: 'warning',                showCancelButton: true,                confirmButtonText: 'Yes, delete it',                cancelButtonText: 'Cancel'            }).then((result) => {                if (result.isConfirmed) {                    $.ajax({                        type: 'POST',                        url: '/Project/Delete/' + ID,                        dataType: 'json',                        success: function (data) {                            if (data == "Resource Already Used in other table.") {                                Swal.fire({                                    text: data,                                    icon: 'error',                                    confirmButtonText: 'OK'                                }).then(function () {                                    location.reload();                                });                            }                            else {                                Swal.fire({                                    text: data,                                    icon: 'success',                                    confirmButtonText: 'OK'                                }).then(function () {                                    location.reload();                                });                            }                        },                        error: function () {                            Swal.fire({                                title: 'Error!',                                text: 'Some Error Occurred',                                icon: 'error',                                confirmButtonText: 'OK'                            });                        }                    });                }            });        }    </script>}